create user LinkUser identified by Pa$$w0rd;
drop user LinkUser;
GRANT create any table, connect, create public database link, SELECT ANY SEQUENCE to LinkUser;
alter user LinkUser quota unlimited on Users;
alter session set "_ORACLE_SCRIPT"=true;

-- db1
CREATE PUBLIC DATABASE LINK RIS_DBLINK 
CONNECT TO LinkUser IDENTIFIED BY Pa$$w0rd 
USING 'orcl3';

-- db2
drop public database link RIS_DBLINK;
CREATE PUBLIC DATABASE LINK RIS_DBLINK 
CONNECT TO LinkUser IDENTIFIED BY Pa$$w0rd 
USING '(DESCRIPTION=
  (ADDRESS=(PROTOCOL=TCP)
             (HOST=192.168.43.8)(PORT=1521))
  (CONNECT_DATA=(SERVICE_NAME=orcl)))';
  
select * from DUAL@"RIS_DBLINK";
  
select * from LinkUser.t_linkuser;

drop table LinkUser.t_linkuser;
create table LinkUser.t_linkuser (
    id int generated by default as identity,
    payload int check (payload > 0),
    CONSTRAINT T1_PK primary key(id)
) tablespace users;

create or replace procedure LinkUser.test_dblink1 as
begin
    insert into LinkUser.t_linkuser (payload) values (1);
    insert into LinkUser.t_linkuser@RIS_DBLINK (payload) values (1);
    
    update LinkUser.t_linkuser set payload = 2 where payload = 1;
    update LinkUser.t_linkuser set payload = 2 where payload = 1;
    commit;
EXCEPTION  
    WHEN OTHERS THEN begin ROLLBACK; RAISE; end;
end;

create or replace procedure LinkUser.test_dblink2 as
begin
    
    delete LinkUser.t_linkuser where payload = 2;
    delete LinkUser.t_linkuser@RIS_DBLINK where payload = 2;
    commit;
EXCEPTION  
    WHEN OTHERS THEN begin ROLLBACK; RAISE; end;
end;


create or replace procedure LinkUser.test_dblink3 as
begin
    
    insert into LinkUser.t_linkuser (payload) values (1);
    insert into LinkUser.t_linkuser@RIS_DBLINK (payload) values (-1);
    
    commit;
EXCEPTION 
    WHEN OTHERS THEN begin ROLLBACK; RAISE; end;
end;

select * from user_sys_privs;

begin
  LinkUser.test_dblink1();
end;
select * from LinkUser.t_linkuser@RIS_DBLINK;

begin
  LinkUser.test_dblink2();
end;
select * from LinkUser.t_linkuser@RIS_DBLINK;

begin
  LinkUser.test_dblink3();
end;
select * from LinkUser.t_linkuser@RIS_DBLINK;
select * from LinkUser.t_linkuser;

GRANT execute ON DBMS_LOCK TO LinkUser;
create or replace procedure LinkUser.test_dblink4 as 
begin
    LOCK TABLE LinkUser.t_linkuser IN EXCLUSIVE MODE;
    LOCK TABLE LinkUser.t_linkuser@RIS_DBLINK IN EXCLUSIVE MODE;
--    delete LinkUser.t_linkuser;
--    delete LinkUser.t_linkuser@RIS_DBLINK;
    DBMS_LOCK.SLEEP(10);
--    insert into LinkUser.t_linkuser (payload) values (1);
--    insert into LinkUser.t_linkuser@RIS_DBLINK (payload) values (1);
    commit;
end;

commit;
connect LinkUser/Pa$$w0rd;

rollback;
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;
exec LinkUser.test_dblink4;